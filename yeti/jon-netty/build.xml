<?xml version="1.0" encoding="UTF-8"?>
<project name="benchmark" xmlns:ivy="antlib:org.apache.ivy.ant" default="package" basedir=".">
 
	<target name="all" depends="setup,resolve" description="Build, compile, and package the entire application">
 
		<!-- Now we compile and package our project. -->
		<antcall target="compile"/>
		<antcall target="package" />
	</target>
 
	<target name="clearcache" description="Clear the Apache Ivy cache" depends="setup">
		<ivy:cleancache />
	</target>
 
<!--	<target name="ivySettings">
		<ivy:settings file="ivysettings.xml" />
	</target> -->
 
	<target name="resolve" description="Retrieve dependencies with Apache Ivy">
		<ivy:retrieve />
	</target>
 
	<property name="ivy.install.version" value="2.1.0" />
	<condition property="ivy.home" value="${env.IVY_HOME}">
		<isset property="env.IVY_HOME" />
	</condition>
	<property name="ivy.home" value="${user.home}/.ant" />
	<property name="ivy.jar.dir" value="${ivy.home}/lib" />
	<property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />
 
	<target name="download-ivy" unless="hasDownloadedIvy">
		<property name="hasDownloadedIvy" value="true" />
 
		<mkdir dir="${ivy.jar.dir}"/>
		<!-- download Ivy from web site so that it can be used even without any special installation -->
		<get src="http://repo2.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar" 
             dest="${ivy.jar.file}" usetimestamp="true"/>
	</target>
 
	<target name="init-ivy" depends="download-ivy">
		<!-- try to load ivy here from ivy home, in case the user has not already dropped
              it into ant's lib dir (note that the latter copy will always take precedence).
              We will not fail as long as local lib dir exists (it may be empty) and
              ivy is in at least one of ant's lib dir or the local lib dir. -->
		<path id="ivy.lib.path">
			<fileset dir="${ivy.jar.dir}" includes="*.jar"/>
 
		</path>
		<taskdef resource="org/apache/ivy/ant/antlib.xml"
                 uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
	</target>
 
	<target name="setup" description="Setup build dependencies and properties" depends="init-ivy">
		<property environment="env"/>
 
		<property name="root" location="${basedir}"/>
		<property name="build" location="${basedir}/build"/>
		<property name="ivy.lib.dir" value="lib"/>
		<property name="src" location="${root}/src"/>
		<property name="target" location="${root}/target"/>
		<property name="target.classes" location="${target}/classes"/>
		
		<mkdir dir="${ivy.lib.dir}"/>
		<mkdir dir="${target}"/>
		<mkdir dir="${target.classes}"/>
	</target>

        <taskdef name="yetic" classname="yeti.lang.compiler.YetiTask"
                 classpath="lib/yeti.jar"/>

 
	<target name="compile" description="Call the Java compiler for this project" depends="setup, resolve">
            <yetic srcdir="${basedir}/src" destdir="${target.classes}"
                   includes="*.yeti" excludes=""
                   preload="yeti/lang/std:yeti/lang/io">
                <classpath>
		    <fileset dir="${root}/lib">
		        <include name="**/*.jar"/>
		    </fileset>
		    <pathelement path="${java.class.path}"/>
                </classpath>
            </yetic>
	</target>
	
	<target name="package" depends="compile">
		<jar destfile="${target}/benchmark.jar" basedir="${target.classes}">
			<restrict>
				<name name="**/*.class"/>
			    <archives>
			    	<zips>
			        	<fileset dir="lib" includes="**/*.jar"/>
			       	</zips>
			    </archives>
			</restrict>
			<manifest>
				<attribute name="Main-Class" value="NonceServer"/>
			</manifest>
		</jar>
	</target>
	
    <target name="clean" depends="setup">
    	<delete dir="${target}"/>
    </target>
</project>
